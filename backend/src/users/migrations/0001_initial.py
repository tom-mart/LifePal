# Generated by Django 5.2.6 on 2025-09-29 11:51

import django.db.models.deletion
import encrypted_model_fields.fields
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LLMContextProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('gender', encrypted_model_fields.fields.EncryptedCharField(blank=True, null=True)),
                ('ethnic_background', encrypted_model_fields.fields.EncryptedCharField(blank=True, null=True)),
                ('occupation', encrypted_model_fields.fields.EncryptedCharField(blank=True, null=True)),
                ('relationship_status', encrypted_model_fields.fields.EncryptedCharField(blank=True, null=True)),
                ('living_situation', encrypted_model_fields.fields.EncryptedCharField(blank=True, help_text="E.g., 'Lives alone', 'With family', 'Shared housing'", null=True)),
                ('has_children', models.BooleanField(blank=True, null=True)),
                ('children_info', encrypted_model_fields.fields.EncryptedTextField(blank=True, help_text='Brief info about children if applicable', null=True)),
                ('health_conditions', encrypted_model_fields.fields.EncryptedTextField(blank=True, help_text='Any health conditions the user wishes to disclose', null=True)),
                ('mental_health_history', encrypted_model_fields.fields.EncryptedTextField(blank=True, null=True)),
                ('current_challenges', encrypted_model_fields.fields.EncryptedTextField(blank=True, help_text='Current life challenges the user is facing', null=True)),
                ('stress_factors', encrypted_model_fields.fields.EncryptedTextField(blank=True, null=True)),
                ('coping_mechanisms', encrypted_model_fields.fields.EncryptedTextField(blank=True, help_text='What helps the user cope with stress', null=True)),
                ('communication_style', models.CharField(blank=True, help_text="E.g., 'Direct', 'Supportive', 'Analytical'", max_length=50, null=True)),
                ('learning_style', models.CharField(blank=True, max_length=50, null=True)),
                ('response_preferences', models.TextField(blank=True, help_text='How the user prefers responses (length, tone, etc.)', null=True)),
                ('personal_goals', encrypted_model_fields.fields.EncryptedTextField(blank=True, null=True)),
                ('professional_goals', encrypted_model_fields.fields.EncryptedTextField(blank=True, null=True)),
                ('core_values', encrypted_model_fields.fields.EncryptedTextField(blank=True, null=True)),
                ('interests', encrypted_model_fields.fields.EncryptedTextField(blank=True, null=True)),
                ('typical_schedule', encrypted_model_fields.fields.EncryptedTextField(blank=True, help_text="Overview of user's typical daily schedule", null=True)),
                ('sleep_pattern', encrypted_model_fields.fields.EncryptedCharField(blank=True, null=True)),
                ('support_network', encrypted_model_fields.fields.EncryptedTextField(blank=True, help_text="Description of user's support network", null=True)),
                ('professional_support', encrypted_model_fields.fields.EncryptedTextField(blank=True, help_text='Any professional support the user receives', null=True)),
                ('lifepal_usage_goals', encrypted_model_fields.fields.EncryptedTextField(blank=True, help_text='What the user hopes to achieve using LifePal', null=True)),
                ('topics_of_interest', encrypted_model_fields.fields.EncryptedTextField(blank=True, null=True)),
                ('topics_to_avoid', encrypted_model_fields.fields.EncryptedTextField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('preferred_name', encrypted_model_fields.fields.EncryptedCharField()),
                ('bio', encrypted_model_fields.fields.EncryptedTextField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserSettings',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('timezone', models.CharField(default='Europe/London', max_length=30)),
                ('theme', models.CharField(choices=[('light', 'Light'), ('dark', 'Dark'), ('system', 'System Default')], default='light', max_length=20)),
                ('email_notifications', models.BooleanField(default=True)),
                ('push_notifications', models.BooleanField(default=True)),
                ('allow_relationship_requests', models.BooleanField(default=True)),
                ('data_sharing_consent', models.BooleanField(default=False)),
                ('last_active', models.DateTimeField(blank=True, null=True)),
                ('login_count', models.PositiveIntegerField(default=0)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
