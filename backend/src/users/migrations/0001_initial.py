# Generated by Django 5.2.6 on 2025-10-06 10:32

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AIIdentityProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('preferred_model', models.CharField(default='gemma3:latest', help_text='Ollama model to use (e.g., gemma3:latest, llama3.2:latest)', max_length=100)),
                ('ai_name', models.CharField(default='LifePal', help_text='What the AI calls itself', max_length=100)),
                ('ai_role', models.CharField(default='supportive life assistant and wellbeing companion', help_text="The AI's primary role/purpose", max_length=200)),
                ('ai_personality_traits', models.TextField(default='empathetic, non-judgmental, supportive, encouraging, warm', help_text='Comma-separated personality traits')),
                ('core_instructions', models.TextField(default='You are a supportive AI companion focused on mental wellbeing and personal growth. Listen actively, ask thoughtful questions, and provide encouragement. Never judge, always validate feelings, and help users reflect on their experiences.', help_text='Core behavioral instructions for the AI')),
                ('communication_style', models.TextField(default='conversational, warm, and empathetic', help_text='How the AI should communicate')),
                ('response_length_preference', models.CharField(choices=[('concise', 'Concise (1-2 sentences)'), ('moderate', 'Moderate (2-4 sentences)'), ('detailed', 'Detailed (4+ sentences)')], default='moderate', help_text='Preferred response length', max_length=20)),
                ('topics_to_emphasize', models.TextField(blank=True, help_text="Topics the AI should focus on (e.g., 'gratitude, mindfulness, relationships')")),
                ('topics_to_avoid', models.TextField(blank=True, help_text='Topics the AI should avoid or handle carefully')),
                ('custom_instructions', models.TextField(blank=True, help_text='Additional custom instructions or preferences')),
                ('use_emojis', models.BooleanField(default=True, help_text='Whether AI should use emojis in responses')),
                ('formality_level', models.CharField(choices=[('casual', 'Casual (friendly, informal)'), ('balanced', 'Balanced (professional yet warm)'), ('formal', 'Formal (professional, structured)')], default='balanced', max_length=20)),
                ('question_frequency', models.CharField(choices=[('low', 'Low (mostly listen)'), ('moderate', 'Moderate (balanced)'), ('high', 'High (ask many questions)')], default='moderate', help_text='How often the AI asks follow-up questions', max_length=20)),
                ('remember_preferences', models.BooleanField(default=True, help_text='Whether to reference past conversations and preferences')),
                ('proactive_suggestions', models.BooleanField(default=True, help_text='Whether AI can make proactive suggestions')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='ai_identity', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'AI Identity Profile',
                'verbose_name_plural': 'AI Identity Profiles',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('preferred_name', models.CharField(blank=True, max_length=255, null=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='userprofile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profiles',
            },
        ),
        migrations.CreateModel(
            name='UserSettings',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('timezone', models.CharField(default='Europe/London', max_length=50)),
                ('theme', models.CharField(choices=[('light', 'Light'), ('dark', 'Dark'), ('system', 'System Default')], default='light', max_length=20)),
                ('email_notifications', models.BooleanField(default=True)),
                ('push_notifications', models.BooleanField(default=True)),
                ('allow_relationship_requests', models.BooleanField(default=True)),
                ('data_sharing_consent', models.BooleanField(default=False)),
                ('last_active', models.DateTimeField(blank=True, null=True)),
                ('login_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='usersettings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Settings',
                'verbose_name_plural': 'User Settings',
            },
        ),
        migrations.CreateModel(
            name='LLMContextProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_of_birth', models.DateField(blank=True, help_text="User's date of birth", null=True)),
                ('gender', models.CharField(blank=True, max_length=50, null=True)),
                ('ethnic_background', models.CharField(blank=True, max_length=255, null=True)),
                ('occupation', models.CharField(blank=True, max_length=100, null=True)),
                ('relationship_status', models.CharField(blank=True, max_length=100, null=True)),
                ('living_situation', models.CharField(blank=True, help_text="E.g., 'Lives alone', 'With family', 'Shared housing'", max_length=100, null=True)),
                ('location', models.CharField(blank=True, help_text="User's location (city, country)", max_length=255, null=True)),
                ('has_children', models.BooleanField(blank=True, null=True)),
                ('children_info', models.TextField(blank=True, help_text='Brief info about children if applicable', null=True)),
                ('health_conditions', models.TextField(blank=True, help_text='Any health conditions the user wishes to disclose', null=True)),
                ('mental_health_history', models.TextField(blank=True, null=True)),
                ('current_challenges', models.TextField(blank=True, help_text='Current life challenges the user is facing', null=True)),
                ('stress_factors', models.TextField(blank=True, null=True)),
                ('coping_mechanisms', models.TextField(blank=True, help_text='What helps the user cope with stress', null=True)),
                ('communication_style', models.CharField(blank=True, help_text="E.g., 'Direct', 'Supportive', 'Analytical'", max_length=50, null=True)),
                ('learning_style', models.CharField(blank=True, max_length=50, null=True)),
                ('response_preferences', models.TextField(blank=True, help_text='How the user prefers responses (length, tone, etc.)', null=True)),
                ('personal_goals', models.TextField(blank=True, null=True)),
                ('professional_goals', models.TextField(blank=True, null=True)),
                ('core_values', models.TextField(blank=True, null=True)),
                ('interests', models.TextField(blank=True, null=True)),
                ('typical_schedule', models.TextField(blank=True, help_text="Overview of user's typical daily schedule", null=True)),
                ('sleep_pattern', models.CharField(blank=True, max_length=100, null=True)),
                ('support_network', models.TextField(blank=True, help_text="Description of user's support network", null=True)),
                ('professional_support', models.TextField(blank=True, help_text='Any professional support the user receives', null=True)),
                ('lifepal_usage_goals', models.TextField(blank=True, help_text='What the user hopes to achieve using LifePal', null=True)),
                ('topics_of_interest', models.TextField(blank=True, null=True)),
                ('topics_to_avoid', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='llm_context', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'LLM Context Profile',
                'verbose_name_plural': 'LLM Context Profiles',
                'indexes': [models.Index(fields=['user'], name='users_llmco_user_id_2de66b_idx')],
            },
        ),
    ]
